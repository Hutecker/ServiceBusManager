<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="ServiceBusManager.MainPage"
             xmlns:viewmodel="clr-namespace:ServiceBusManager.ViewModels"
             x:DataType="viewmodel:MainViewModel"
             Padding="5">

    <Shell.TitleView>
        <Grid ColumnDefinitions="Auto, *, Auto" VerticalOptions="Center">
            <!-- Icon and Title Text -->
            <HorizontalStackLayout Grid.Column="0" VerticalOptions="Center" Spacing="5">
                <Image Source="icon.png" 
                       HeightRequest="24" 
                       Margin="5,0,0,0" 
                       VerticalOptions="Center" />
                <Label Text="Service Bus Manager" VerticalOptions="Center" FontSize="Medium" FontAttributes="Bold" />
            </HorizontalStackLayout>

            <!-- Theme Toggle Button -->
            <Label Grid.Column="2" 
                   Text="{Binding ThemeIcon}"
                   FontFamily="FontAwesomeSolid"
                   FontSize="20"
                   Margin="0,10,10,0" 
                   VerticalOptions="Center"
                   HorizontalOptions="End"
                   TextColor="{AppThemeBinding Light={StaticResource Gray950}, Dark={StaticResource White}}">
                <Label.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding ToggleThemeCommand}" />
                </Label.GestureRecognizers>
            </Label>
        </Grid>
    </Shell.TitleView>

    <ContentPage.Resources>
        <ResourceDictionary Source="Resources/Styles/Colors.xaml" />
    </ContentPage.Resources>

    <Grid RowDefinitions="*, 5, Auto" ColumnDefinitions="1*, 5, 3*">
        <!-- Explorer Panel (Top Left) -->
        <Border Grid.Row="0" Grid.Column="0" Stroke="{StaticResource Gray300}"
                StrokeThickness="1" Padding="5" BackgroundColor="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource Gray950}}">
            <Grid RowDefinitions="Auto, *">
                <Label Text="Explorer" FontSize="16" FontAttributes="Bold" Grid.Row="0" Margin="0,0,0,5"/>
                <!-- Tree View Using Collection View with Templates -->
                <CollectionView Grid.Row="1" 
                                ItemsSource="{Binding Resources}"
                                SelectionMode="Single"
                                SelectionChangedCommand="{Binding SelectResourceCommand}"
                                SelectionChangedCommandParameter="{Binding SelectedItem, Source={RelativeSource Self}}">
                    <CollectionView.ItemTemplate>
                        <DataTemplate x:DataType="viewmodel:ServiceBusResourceItem">
                            <Grid Padding="5" ColumnDefinitions="Auto, *">
                                <!-- Text-based indicator based on resource type -->
                                <Label Grid.Column="0" WidthRequest="24" VerticalOptions="Center">
                                    <Label.Triggers>
                                        <DataTrigger TargetType="Label" Binding="{Binding Type}" Value="Queue">
                                            <Setter Property="Text" Value="Q" />
                                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource PrimaryDark}}" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="Label" Binding="{Binding Type}" Value="Topic">
                                            <Setter Property="Text" Value="T" />
                                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Secondary}, Dark={StaticResource Gray300}}" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="Label" Binding="{Binding Type}" Value="Subscription">
                                            <Setter Property="Text" Value="S" />
                                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Tertiary}, Dark={StaticResource Gray400}}" />
                                        </DataTrigger>
                                    </Label.Triggers>
                                </Label>
                                
                                <VerticalStackLayout Grid.Column="1" Spacing="0">
                                    <Label Text="{Binding Name}" FontAttributes="Bold" />
                                    
                                    <!-- Show children if this is a topic with subscriptions -->
                                    <CollectionView ItemsSource="{Binding Children}" 
                                                   IsVisible="{Binding Children.Count, Converter={StaticResource CountGreaterThanZeroConverter}}"
                                                   Margin="15,0,0,0">
                                        <CollectionView.ItemTemplate>
                                            <DataTemplate x:DataType="viewmodel:ServiceBusResourceItem">
                                                <Grid Padding="2" ColumnDefinitions="Auto, *">
                                                    <Label Grid.Column="0" WidthRequest="24" Text="S" TextColor="{AppThemeBinding Light={StaticResource Tertiary}, Dark={StaticResource Gray400}}" VerticalOptions="Center" />
                                                    <Label Grid.Column="1" Text="{Binding Name}" />
                                                </Grid>
                                            </DataTemplate>
                                        </CollectionView.ItemTemplate>
                                    </CollectionView>
                                </VerticalStackLayout>
                            </Grid>
                        </DataTemplate>
                    </CollectionView.ItemTemplate>
                </CollectionView>
            </Grid>
        </Border>

        <!-- GridSplitter Column Between Left and Right Panels -->
        <BoxView Grid.Row="0" Grid.Column="1"
                 Color="{StaticResource Gray200}"
                 HorizontalOptions="Fill" 
                 VerticalOptions="Fill"
                 WidthRequest="1">
        </BoxView>

        <!-- Details Panel (Top Right) -->
        <Border Grid.Row="0" Grid.Column="2" Stroke="{StaticResource Gray300}" 
                StrokeThickness="1" Padding="5" BackgroundColor="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource Gray950}}">
            <Grid RowDefinitions="Auto, *">
                <Label Text="Details" FontSize="16" FontAttributes="Bold" Grid.Row="0" Margin="0,0,0,5" VerticalOptions="Center"/>
                <ContentView Grid.Row="1" x:Name="DetailsContentView">
                    <Grid>
                        <!-- Default view when nothing is selected -->
                        <VerticalStackLayout IsVisible="{Binding SelectedResource, Converter={StaticResource IsNullConverter}}"
                                            HorizontalOptions="Center" VerticalOptions="Center">
                            <Label Text="Select an item in the Explorer to view details" 
                                   TextColor="{AppThemeBinding Light={StaticResource Gray500}, Dark={StaticResource Gray300}}" />
                        </VerticalStackLayout>

                        <!-- Details view when a resource is selected -->
                        <Grid IsVisible="{Binding SelectedResource, Converter={StaticResource IsNotNullConverter}}"
                              RowDefinitions="Auto, Auto, Auto, *">
                            <Label Grid.Row="0" Text="{Binding SelectedResource.Name}" FontSize="Large" FontAttributes="Bold" />
                            <Label Grid.Row="1" Text="{Binding SelectedResource.Type}" />
                            
                            <!-- Show parent info for subscriptions -->
                            <StackLayout Grid.Row="2" Orientation="Horizontal" 
                                        IsVisible="{Binding SelectedResource.Parent, Converter={StaticResource IsNotNullConverter}}">
                                <Label Text="Parent Topic: " />
                                <Label Text="{Binding SelectedResource.Parent}" />
                            </StackLayout>
                            
                            <!-- Additional details will go here -->
                            <Grid Grid.Row="3" Margin="0,10,0,0" RowDefinitions="Auto, *">
                                <HorizontalStackLayout Grid.Row="0" Spacing="10">
                                    <Button Text="Overview" 
                                            Command="{Binding SelectTabCommand}" 
                                            CommandParameter="{x:Int32 0}"
                                            BackgroundColor="{Binding SelectedTabIndex, Converter={StaticResource EqualityToBrushConverter}, ConverterParameter=0}" />
                                    <Button Text="Messages" 
                                            Command="{Binding SelectTabCommand}" 
                                            CommandParameter="{x:Int32 1}"
                                            BackgroundColor="{Binding SelectedTabIndex, Converter={StaticResource EqualityToBrushConverter}, ConverterParameter=1}" />
                                    <Button Text="Properties" 
                                            Command="{Binding SelectTabCommand}" 
                                            CommandParameter="{x:Int32 2}"
                                            BackgroundColor="{Binding SelectedTabIndex, Converter={StaticResource EqualityToBrushConverter}, ConverterParameter=2}" />
                                </HorizontalStackLayout>
                                <Grid Grid.Row="1" Padding="10" Margin="0,5,0,0">
                                    <!-- Tab content -->
                                    <Grid>
                                        <!-- Overview Tab -->
                                        <VerticalStackLayout IsVisible="{Binding SelectedTabIndex, Converter={StaticResource EqualityConverter}, ConverterParameter=0}">
                                            <Label Text="Overview details will go here" />
                                        </VerticalStackLayout>
                                        
                                        <!-- Messages Tab -->
                                        <VerticalStackLayout IsVisible="{Binding SelectedTabIndex, Converter={StaticResource EqualityConverter}, ConverterParameter=1}">
                                            <Label Text="Message list will go here" />
                                        </VerticalStackLayout>
                                        
                                        <!-- Properties Tab -->
                                        <VerticalStackLayout IsVisible="{Binding SelectedTabIndex, Converter={StaticResource EqualityConverter}, ConverterParameter=2}">
                                            <Label Text="Properties will go here" />
                                        </VerticalStackLayout>
                                    </Grid>
                                </Grid>
                            </Grid>
                        </Grid>
                    </Grid>
                </ContentView>
            </Grid>
        </Border>

        <!-- GridSplitter Row Between Top and Bottom Panels -->
        <BoxView Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3"
                 Color="{StaticResource Gray200}"
                 HorizontalOptions="Fill" 
                 VerticalOptions="Fill"
                 HeightRequest="1">
        </BoxView>

        <!-- Logs Panel (Bottom) -->
        <Border Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" Padding="5" 
                BackgroundColor="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource Gray950}}">
            <!-- New inner Grid for Header and Content -->
            <Grid RowDefinitions="Auto, *">
                <!-- Header Row -->
                <Grid Grid.Row="0" ColumnDefinitions="*, Auto, Auto">
                    <!-- Logs Label - Always Visible -->
                    <Label Text="Logs" FontSize="16" FontAttributes="Bold" Grid.Column="0"/>
                   
                    <!-- Clear Button - Visibility bound -->
                    <Button Text="Clear" Grid.Column="1" WidthRequest="70"
                            Command="{Binding ClearLogsCommand}"
                            Margin="0,0,5,0"
                            IsVisible="{Binding IsLogsVisible}"/>
                            
                    <!-- Hide/Show Button - Always Visible, Text Triggered -->
                    <Button Grid.Column="2" WidthRequest="70" 
                            Command="{Binding ToggleLogsCommand}">
                        <Button.Triggers>
                            <DataTrigger TargetType="Button" Binding="{Binding IsLogsVisible}" Value="True">
                                <Setter Property="Text" Value="Hide" />
                            </DataTrigger>
                            <DataTrigger TargetType="Button" Binding="{Binding IsLogsVisible}" Value="False">
                                <Setter Property="Text" Value="Show" />
                            </DataTrigger>
                        </Button.Triggers>
                    </Button>
                </Grid>
                
                <!-- Log Content ScrollView - Visibility bound -->
                <ScrollView Grid.Row="1" IsVisible="{Binding IsLogsVisible}">
                    <CollectionView ItemsSource="{Binding Logs}" MinimumHeightRequest="150">
                        <CollectionView.ItemTemplate>
                            <DataTemplate x:DataType="viewmodel:LogItem">
                                <Label Text="{Binding FormattedLog}" Padding="2" />
                            </DataTemplate>
                        </CollectionView.ItemTemplate>
                    </CollectionView>
                </ScrollView>
            </Grid>
        </Border>
    </Grid>
</ContentPage>